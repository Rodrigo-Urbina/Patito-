Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    SAME

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAMA ID SEMICOLON vars funcion principal
Rule 2     program -> PROGRAMA ID SEMICOLON funcion principal
Rule 3     program -> PROGRAMA ID SEMICOLON vars principal
Rule 4     program -> PROGRAMA ID SEMICOLON principal
Rule 5     principal -> PRINCIPAL LPAREN RPAREN bloque
Rule 6     vars -> VAR vars_aux
Rule 7     vars_aux -> tipo_simple vars_aux1
Rule 8     vars_aux -> tipo_simple vars_aux1 vars_aux
Rule 9     vars_aux1 -> vars_aux2 SEMICOLON
Rule 10    vars_aux1 -> vars_aux2 COMMA vars_aux1
Rule 11    vars_aux2 -> ID
Rule 12    vars_aux2 -> ID LSQUARE CTE_I RSQUARE
Rule 13    vars_aux2 -> ID LSQUARE CTE_I RSQUARE LSQUARE CTE_I RSQUARE
Rule 14    tipo_simple -> INT
Rule 15    tipo_simple -> FLOAT
Rule 16    tipo_simple -> CHAR
Rule 17    variable -> ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
Rule 18    variable -> ID LSQUARE exp RSQUARE
Rule 19    variable -> ID
Rule 20    funcion -> FUNCION LESSTHAN tipo_simple GREATERTHAN ID LPAREN param RPAREN vars SEMICOLON bloque
Rule 21    funcion -> FUNCION LESSTHAN tipo_simple GREATERTHAN ID LPAREN param RPAREN SEMICOLON bloque
Rule 22    funcion -> FUNCION LESSTHAN VOID GREATERTHAN ID LPAREN param RPAREN vars SEMICOLON bloque
Rule 23    funcion -> FUNCION LESSTHAN VOID GREATERTHAN ID LPAREN param RPAREN SEMICOLON bloque
Rule 24    param -> ID
Rule 25    param -> ID param
Rule 26    param -> empty
Rule 27    empty -> <empty>
Rule 28    bloque -> LBRACKET mult_estatutos RBRACKET
Rule 29    mult_estatutos -> estatuto
Rule 30    mult_estatutos -> estatuto mult_estatutos
Rule 31    mult_estatutos -> empty
Rule 32    estatuto -> asigna
Rule 33    estatuto -> llamada
Rule 34    estatuto -> lee
Rule 35    estatuto -> escribe
Rule 36    estatuto -> condicion
Rule 37    estatuto -> ciclo_w
Rule 38    estatuto -> retorno
Rule 39    estatuto -> ciclo_f
Rule 40    asigna -> variable EQUAL exp SEMICOLON
Rule 41    llamada -> ID LPAREN mult_exp RPAREN
Rule 42    mult_exp -> exp
Rule 43    mult_exp -> exp COMMA mult_exp
Rule 44    mult_exp -> empty
Rule 45    lee -> LEE LPAREN variable RPAREN
Rule 46    escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON
Rule 47    escribe -> LPAREN mult_cte_s RPAREN SEMICOLON
Rule 48    mult_cte_s -> CTE_S
Rule 49    mult_cte_s -> CTE_S COMMA mult_cte_s
Rule 50    mult_cte_s -> empty
Rule 51    exp -> t_exp OR exp
Rule 52    exp -> t_exp
Rule 53    t_exp -> g_exp AND t_exp
Rule 54    t_exp -> g_exp
Rule 55    g_exp -> m_exp
Rule 56    g_exp -> LESSTHAN m_exp
Rule 57    g_exp -> LESSEQUAL m_exp
Rule 58    g_exp -> GREATERTHAN m_exp
Rule 59    g_exp -> GREATEREQUAL m_exp
Rule 60    g_exp -> EQUAL m_exp
Rule 61    g_exp -> NOEQUAL m_exp
Rule 62    m_exp -> t
Rule 63    m_exp -> t PLUS m_exp
Rule 64    m_exp -> t MINUS m_exp
Rule 65    t -> f
Rule 66    t -> f MULT t
Rule 67    t -> f DIV t
Rule 68    t -> f DETER t
Rule 69    t -> f TRANS t
Rule 70    t -> f INVER t
Rule 71    f -> LPAREN exp RPAREN
Rule 72    f -> CTE_I
Rule 73    f -> CTE_F
Rule 74    f -> CTE_C
Rule 75    f -> variable
Rule 76    f -> llamada
Rule 77    condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON
Rule 78    condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON
Rule 79    ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque
Rule 80    ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque
Rule 81    var_cte -> exp
Rule 82    var_cte -> CTE_I
Rule 83    var_cte -> CTE_F
Rule 84    retorno -> REGRESA exp SEMICOLON

Terminals, with rules where they appear

AND                  : 53
CHAR                 : 16
COLON                : 
COMMA                : 10 43 49
COMMENT              : 
CTE_C                : 74
CTE_F                : 73 83
CTE_I                : 12 13 13 72 80 82
CTE_S                : 48 49
DESDE                : 80
DETER                : 68
DIV                  : 67
ENTONCES             : 77 78
EQUAL                : 40 60
ESCRIBE              : 46
FLOAT                : 15
FUNCION              : 20 21 22 23
GREATEREQUAL         : 59
GREATERTHAN          : 20 21 22 23 58
HACER                : 80
HASTA                : 80
HAZ                  : 79
ID                   : 1 2 3 4 11 12 13 17 18 19 20 21 22 23 24 25 41
INT                  : 14
INVER                : 70
LBRACKET             : 28
LEE                  : 45
LESSEQUAL            : 57
LESSTHAN             : 20 21 22 23 56
LPAREN               : 5 20 21 22 23 41 45 46 47 71 77 78 79
LSQUARE              : 12 13 13 17 17 18
MIENTRAS             : 79
MINUS                : 64
MULT                 : 66
NOEQUAL              : 61
OR                   : 51
PLUS                 : 63
PRINCIPAL            : 5
PROGRAMA             : 1 2 3 4
RBRACKET             : 28
REGRESA              : 84
RPAREN               : 5 20 21 22 23 41 45 46 47 71 77 78 79
RSQUARE              : 12 13 13 17 17 18
SAME                 : 
SEMICOLON            : 1 2 3 4 9 20 21 22 23 40 46 47 77 78 84
SI                   : 77 78
SINO                 : 77
TRANS                : 69
VAR                  : 6
VOID                 : 22 23
error                : 

Nonterminals, with rules where they appear

asigna               : 32 80
bloque               : 5 20 21 22 23 77 77 78 79 80
ciclo_f              : 39
ciclo_w              : 37
condicion            : 36
empty                : 26 31 44 50
escribe              : 35
estatuto             : 29 30
exp                  : 17 17 18 40 42 43 51 71 77 78 79 81 84
f                    : 65 66 67 68 69 70
funcion              : 1 2
g_exp                : 53 54
lee                  : 34
llamada              : 33 76
m_exp                : 55 56 57 58 59 60 61 63 64
mult_cte_s           : 47 49
mult_estatutos       : 28 30
mult_exp             : 41 43 46
param                : 20 21 22 23 25
principal            : 1 2 3 4
program              : 0
retorno              : 38
t                    : 62 63 64 66 67 68 69 70
t_exp                : 51 52 53
tipo_simple          : 7 8 20 21
var_cte              : 
variable             : 40 45 75
vars                 : 1 3 20 22
vars_aux             : 6 8
vars_aux1            : 7 8 10
vars_aux2            : 9 10

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAMA ID SEMICOLON vars funcion principal
    (2) program -> . PROGRAMA ID SEMICOLON funcion principal
    (3) program -> . PROGRAMA ID SEMICOLON vars principal
    (4) program -> . PROGRAMA ID SEMICOLON principal

    PROGRAMA        shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAMA . ID SEMICOLON vars funcion principal
    (2) program -> PROGRAMA . ID SEMICOLON funcion principal
    (3) program -> PROGRAMA . ID SEMICOLON vars principal
    (4) program -> PROGRAMA . ID SEMICOLON principal

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAMA ID . SEMICOLON vars funcion principal
    (2) program -> PROGRAMA ID . SEMICOLON funcion principal
    (3) program -> PROGRAMA ID . SEMICOLON vars principal
    (4) program -> PROGRAMA ID . SEMICOLON principal

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAMA ID SEMICOLON . vars funcion principal
    (2) program -> PROGRAMA ID SEMICOLON . funcion principal
    (3) program -> PROGRAMA ID SEMICOLON . vars principal
    (4) program -> PROGRAMA ID SEMICOLON . principal
    (6) vars -> . VAR vars_aux
    (20) funcion -> . FUNCION LESSTHAN tipo_simple GREATERTHAN ID LPAREN param RPAREN vars SEMICOLON bloque
    (21) funcion -> . FUNCION LESSTHAN tipo_simple GREATERTHAN ID LPAREN param RPAREN SEMICOLON bloque
    (22) funcion -> . FUNCION LESSTHAN VOID GREATERTHAN ID LPAREN param RPAREN vars SEMICOLON bloque
    (23) funcion -> . FUNCION LESSTHAN VOID GREATERTHAN ID LPAREN param RPAREN SEMICOLON bloque
    (5) principal -> . PRINCIPAL LPAREN RPAREN bloque

    VAR             shift and go to state 8
    FUNCION         shift and go to state 9
    PRINCIPAL       shift and go to state 10

    vars                           shift and go to state 5
    funcion                        shift and go to state 6
    principal                      shift and go to state 7

state 5

    (1) program -> PROGRAMA ID SEMICOLON vars . funcion principal
    (3) program -> PROGRAMA ID SEMICOLON vars . principal
    (20) funcion -> . FUNCION LESSTHAN tipo_simple GREATERTHAN ID LPAREN param RPAREN vars SEMICOLON bloque
    (21) funcion -> . FUNCION LESSTHAN tipo_simple GREATERTHAN ID LPAREN param RPAREN SEMICOLON bloque
    (22) funcion -> . FUNCION LESSTHAN VOID GREATERTHAN ID LPAREN param RPAREN vars SEMICOLON bloque
    (23) funcion -> . FUNCION LESSTHAN VOID GREATERTHAN ID LPAREN param RPAREN SEMICOLON bloque
    (5) principal -> . PRINCIPAL LPAREN RPAREN bloque

    FUNCION         shift and go to state 9
    PRINCIPAL       shift and go to state 10

    funcion                        shift and go to state 11
    principal                      shift and go to state 12

state 6

    (2) program -> PROGRAMA ID SEMICOLON funcion . principal
    (5) principal -> . PRINCIPAL LPAREN RPAREN bloque

    PRINCIPAL       shift and go to state 10

    principal                      shift and go to state 13

state 7

    (4) program -> PROGRAMA ID SEMICOLON principal .

    $end            reduce using rule 4 (program -> PROGRAMA ID SEMICOLON principal .)


state 8

    (6) vars -> VAR . vars_aux
    (7) vars_aux -> . tipo_simple vars_aux1
    (8) vars_aux -> . tipo_simple vars_aux1 vars_aux
    (14) tipo_simple -> . INT
    (15) tipo_simple -> . FLOAT
    (16) tipo_simple -> . CHAR

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    vars_aux                       shift and go to state 14
    tipo_simple                    shift and go to state 15

state 9

    (20) funcion -> FUNCION . LESSTHAN tipo_simple GREATERTHAN ID LPAREN param RPAREN vars SEMICOLON bloque
    (21) funcion -> FUNCION . LESSTHAN tipo_simple GREATERTHAN ID LPAREN param RPAREN SEMICOLON bloque
    (22) funcion -> FUNCION . LESSTHAN VOID GREATERTHAN ID LPAREN param RPAREN vars SEMICOLON bloque
    (23) funcion -> FUNCION . LESSTHAN VOID GREATERTHAN ID LPAREN param RPAREN SEMICOLON bloque

    LESSTHAN        shift and go to state 19


state 10

    (5) principal -> PRINCIPAL . LPAREN RPAREN bloque

    LPAREN          shift and go to state 20


state 11

    (1) program -> PROGRAMA ID SEMICOLON vars funcion . principal
    (5) principal -> . PRINCIPAL LPAREN RPAREN bloque

    PRINCIPAL       shift and go to state 10

    principal                      shift and go to state 21

state 12

    (3) program -> PROGRAMA ID SEMICOLON vars principal .

    $end            reduce using rule 3 (program -> PROGRAMA ID SEMICOLON vars principal .)


state 13

    (2) program -> PROGRAMA ID SEMICOLON funcion principal .

    $end            reduce using rule 2 (program -> PROGRAMA ID SEMICOLON funcion principal .)


state 14

    (6) vars -> VAR vars_aux .

    FUNCION         reduce using rule 6 (vars -> VAR vars_aux .)
    PRINCIPAL       reduce using rule 6 (vars -> VAR vars_aux .)
    SEMICOLON       reduce using rule 6 (vars -> VAR vars_aux .)


state 15

    (7) vars_aux -> tipo_simple . vars_aux1
    (8) vars_aux -> tipo_simple . vars_aux1 vars_aux
    (9) vars_aux1 -> . vars_aux2 SEMICOLON
    (10) vars_aux1 -> . vars_aux2 COMMA vars_aux1
    (11) vars_aux2 -> . ID
    (12) vars_aux2 -> . ID LSQUARE CTE_I RSQUARE
    (13) vars_aux2 -> . ID LSQUARE CTE_I RSQUARE LSQUARE CTE_I RSQUARE

    ID              shift and go to state 24

    vars_aux1                      shift and go to state 22
    vars_aux2                      shift and go to state 23

state 16

    (14) tipo_simple -> INT .

    ID              reduce using rule 14 (tipo_simple -> INT .)
    GREATERTHAN     reduce using rule 14 (tipo_simple -> INT .)


state 17

    (15) tipo_simple -> FLOAT .

    ID              reduce using rule 15 (tipo_simple -> FLOAT .)
    GREATERTHAN     reduce using rule 15 (tipo_simple -> FLOAT .)


state 18

    (16) tipo_simple -> CHAR .

    ID              reduce using rule 16 (tipo_simple -> CHAR .)
    GREATERTHAN     reduce using rule 16 (tipo_simple -> CHAR .)


state 19

    (20) funcion -> FUNCION LESSTHAN . tipo_simple GREATERTHAN ID LPAREN param RPAREN vars SEMICOLON bloque
    (21) funcion -> FUNCION LESSTHAN . tipo_simple GREATERTHAN ID LPAREN param RPAREN SEMICOLON bloque
    (22) funcion -> FUNCION LESSTHAN . VOID GREATERTHAN ID LPAREN param RPAREN vars SEMICOLON bloque
    (23) funcion -> FUNCION LESSTHAN . VOID GREATERTHAN ID LPAREN param RPAREN SEMICOLON bloque
    (14) tipo_simple -> . INT
    (15) tipo_simple -> . FLOAT
    (16) tipo_simple -> . CHAR

    VOID            shift and go to state 26
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo_simple                    shift and go to state 25

state 20

    (5) principal -> PRINCIPAL LPAREN . RPAREN bloque

    RPAREN          shift and go to state 27


state 21

    (1) program -> PROGRAMA ID SEMICOLON vars funcion principal .

    $end            reduce using rule 1 (program -> PROGRAMA ID SEMICOLON vars funcion principal .)


state 22

    (7) vars_aux -> tipo_simple vars_aux1 .
    (8) vars_aux -> tipo_simple vars_aux1 . vars_aux
    (7) vars_aux -> . tipo_simple vars_aux1
    (8) vars_aux -> . tipo_simple vars_aux1 vars_aux
    (14) tipo_simple -> . INT
    (15) tipo_simple -> . FLOAT
    (16) tipo_simple -> . CHAR

    FUNCION         reduce using rule 7 (vars_aux -> tipo_simple vars_aux1 .)
    PRINCIPAL       reduce using rule 7 (vars_aux -> tipo_simple vars_aux1 .)
    SEMICOLON       reduce using rule 7 (vars_aux -> tipo_simple vars_aux1 .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    tipo_simple                    shift and go to state 15
    vars_aux                       shift and go to state 28

state 23

    (9) vars_aux1 -> vars_aux2 . SEMICOLON
    (10) vars_aux1 -> vars_aux2 . COMMA vars_aux1

    SEMICOLON       shift and go to state 29
    COMMA           shift and go to state 30


state 24

    (11) vars_aux2 -> ID .
    (12) vars_aux2 -> ID . LSQUARE CTE_I RSQUARE
    (13) vars_aux2 -> ID . LSQUARE CTE_I RSQUARE LSQUARE CTE_I RSQUARE

    SEMICOLON       reduce using rule 11 (vars_aux2 -> ID .)
    COMMA           reduce using rule 11 (vars_aux2 -> ID .)
    LSQUARE         shift and go to state 31


state 25

    (20) funcion -> FUNCION LESSTHAN tipo_simple . GREATERTHAN ID LPAREN param RPAREN vars SEMICOLON bloque
    (21) funcion -> FUNCION LESSTHAN tipo_simple . GREATERTHAN ID LPAREN param RPAREN SEMICOLON bloque

    GREATERTHAN     shift and go to state 32


state 26

    (22) funcion -> FUNCION LESSTHAN VOID . GREATERTHAN ID LPAREN param RPAREN vars SEMICOLON bloque
    (23) funcion -> FUNCION LESSTHAN VOID . GREATERTHAN ID LPAREN param RPAREN SEMICOLON bloque

    GREATERTHAN     shift and go to state 33


state 27

    (5) principal -> PRINCIPAL LPAREN RPAREN . bloque
    (28) bloque -> . LBRACKET mult_estatutos RBRACKET

    LBRACKET        shift and go to state 35

    bloque                         shift and go to state 34

state 28

    (8) vars_aux -> tipo_simple vars_aux1 vars_aux .

    FUNCION         reduce using rule 8 (vars_aux -> tipo_simple vars_aux1 vars_aux .)
    PRINCIPAL       reduce using rule 8 (vars_aux -> tipo_simple vars_aux1 vars_aux .)
    SEMICOLON       reduce using rule 8 (vars_aux -> tipo_simple vars_aux1 vars_aux .)


state 29

    (9) vars_aux1 -> vars_aux2 SEMICOLON .

    INT             reduce using rule 9 (vars_aux1 -> vars_aux2 SEMICOLON .)
    FLOAT           reduce using rule 9 (vars_aux1 -> vars_aux2 SEMICOLON .)
    CHAR            reduce using rule 9 (vars_aux1 -> vars_aux2 SEMICOLON .)
    FUNCION         reduce using rule 9 (vars_aux1 -> vars_aux2 SEMICOLON .)
    PRINCIPAL       reduce using rule 9 (vars_aux1 -> vars_aux2 SEMICOLON .)
    SEMICOLON       reduce using rule 9 (vars_aux1 -> vars_aux2 SEMICOLON .)


state 30

    (10) vars_aux1 -> vars_aux2 COMMA . vars_aux1
    (9) vars_aux1 -> . vars_aux2 SEMICOLON
    (10) vars_aux1 -> . vars_aux2 COMMA vars_aux1
    (11) vars_aux2 -> . ID
    (12) vars_aux2 -> . ID LSQUARE CTE_I RSQUARE
    (13) vars_aux2 -> . ID LSQUARE CTE_I RSQUARE LSQUARE CTE_I RSQUARE

    ID              shift and go to state 24

    vars_aux2                      shift and go to state 23
    vars_aux1                      shift and go to state 36

state 31

    (12) vars_aux2 -> ID LSQUARE . CTE_I RSQUARE
    (13) vars_aux2 -> ID LSQUARE . CTE_I RSQUARE LSQUARE CTE_I RSQUARE

    CTE_I           shift and go to state 37


state 32

    (20) funcion -> FUNCION LESSTHAN tipo_simple GREATERTHAN . ID LPAREN param RPAREN vars SEMICOLON bloque
    (21) funcion -> FUNCION LESSTHAN tipo_simple GREATERTHAN . ID LPAREN param RPAREN SEMICOLON bloque

    ID              shift and go to state 38


state 33

    (22) funcion -> FUNCION LESSTHAN VOID GREATERTHAN . ID LPAREN param RPAREN vars SEMICOLON bloque
    (23) funcion -> FUNCION LESSTHAN VOID GREATERTHAN . ID LPAREN param RPAREN SEMICOLON bloque

    ID              shift and go to state 39


state 34

    (5) principal -> PRINCIPAL LPAREN RPAREN bloque .

    $end            reduce using rule 5 (principal -> PRINCIPAL LPAREN RPAREN bloque .)


state 35

    (28) bloque -> LBRACKET . mult_estatutos RBRACKET
    (29) mult_estatutos -> . estatuto
    (30) mult_estatutos -> . estatuto mult_estatutos
    (31) mult_estatutos -> . empty
    (32) estatuto -> . asigna
    (33) estatuto -> . llamada
    (34) estatuto -> . lee
    (35) estatuto -> . escribe
    (36) estatuto -> . condicion
    (37) estatuto -> . ciclo_w
    (38) estatuto -> . retorno
    (39) estatuto -> . ciclo_f
    (27) empty -> .
    (40) asigna -> . variable EQUAL exp SEMICOLON
    (41) llamada -> . ID LPAREN mult_exp RPAREN
    (45) lee -> . LEE LPAREN variable RPAREN
    (46) escribe -> . ESCRIBE LPAREN mult_exp RPAREN SEMICOLON
    (47) escribe -> . LPAREN mult_cte_s RPAREN SEMICOLON
    (77) condicion -> . SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON
    (78) condicion -> . SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON
    (79) ciclo_w -> . MIENTRAS LPAREN exp RPAREN HAZ bloque
    (84) retorno -> . REGRESA exp SEMICOLON
    (80) ciclo_f -> . DESDE asigna HASTA CTE_I HACER bloque
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID

    RBRACKET        reduce using rule 27 (empty -> .)
    ID              shift and go to state 52
    LEE             shift and go to state 54
    ESCRIBE         shift and go to state 55
    LPAREN          shift and go to state 53
    SI              shift and go to state 56
    MIENTRAS        shift and go to state 57
    REGRESA         shift and go to state 58
    DESDE           shift and go to state 59

    mult_estatutos                 shift and go to state 40
    estatuto                       shift and go to state 41
    empty                          shift and go to state 42
    asigna                         shift and go to state 43
    llamada                        shift and go to state 44
    lee                            shift and go to state 45
    escribe                        shift and go to state 46
    condicion                      shift and go to state 47
    ciclo_w                        shift and go to state 48
    retorno                        shift and go to state 49
    ciclo_f                        shift and go to state 50
    variable                       shift and go to state 51

state 36

    (10) vars_aux1 -> vars_aux2 COMMA vars_aux1 .

    INT             reduce using rule 10 (vars_aux1 -> vars_aux2 COMMA vars_aux1 .)
    FLOAT           reduce using rule 10 (vars_aux1 -> vars_aux2 COMMA vars_aux1 .)
    CHAR            reduce using rule 10 (vars_aux1 -> vars_aux2 COMMA vars_aux1 .)
    FUNCION         reduce using rule 10 (vars_aux1 -> vars_aux2 COMMA vars_aux1 .)
    PRINCIPAL       reduce using rule 10 (vars_aux1 -> vars_aux2 COMMA vars_aux1 .)
    SEMICOLON       reduce using rule 10 (vars_aux1 -> vars_aux2 COMMA vars_aux1 .)


state 37

    (12) vars_aux2 -> ID LSQUARE CTE_I . RSQUARE
    (13) vars_aux2 -> ID LSQUARE CTE_I . RSQUARE LSQUARE CTE_I RSQUARE

    RSQUARE         shift and go to state 60


state 38

    (20) funcion -> FUNCION LESSTHAN tipo_simple GREATERTHAN ID . LPAREN param RPAREN vars SEMICOLON bloque
    (21) funcion -> FUNCION LESSTHAN tipo_simple GREATERTHAN ID . LPAREN param RPAREN SEMICOLON bloque

    LPAREN          shift and go to state 61


state 39

    (22) funcion -> FUNCION LESSTHAN VOID GREATERTHAN ID . LPAREN param RPAREN vars SEMICOLON bloque
    (23) funcion -> FUNCION LESSTHAN VOID GREATERTHAN ID . LPAREN param RPAREN SEMICOLON bloque

    LPAREN          shift and go to state 62


state 40

    (28) bloque -> LBRACKET mult_estatutos . RBRACKET

    RBRACKET        shift and go to state 63


state 41

    (29) mult_estatutos -> estatuto .
    (30) mult_estatutos -> estatuto . mult_estatutos
    (29) mult_estatutos -> . estatuto
    (30) mult_estatutos -> . estatuto mult_estatutos
    (31) mult_estatutos -> . empty
    (32) estatuto -> . asigna
    (33) estatuto -> . llamada
    (34) estatuto -> . lee
    (35) estatuto -> . escribe
    (36) estatuto -> . condicion
    (37) estatuto -> . ciclo_w
    (38) estatuto -> . retorno
    (39) estatuto -> . ciclo_f
    (27) empty -> .
    (40) asigna -> . variable EQUAL exp SEMICOLON
    (41) llamada -> . ID LPAREN mult_exp RPAREN
    (45) lee -> . LEE LPAREN variable RPAREN
    (46) escribe -> . ESCRIBE LPAREN mult_exp RPAREN SEMICOLON
    (47) escribe -> . LPAREN mult_cte_s RPAREN SEMICOLON
    (77) condicion -> . SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON
    (78) condicion -> . SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON
    (79) ciclo_w -> . MIENTRAS LPAREN exp RPAREN HAZ bloque
    (84) retorno -> . REGRESA exp SEMICOLON
    (80) ciclo_f -> . DESDE asigna HASTA CTE_I HACER bloque
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID

  ! reduce/reduce conflict for RBRACKET resolved using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    ID              shift and go to state 52
    LEE             shift and go to state 54
    ESCRIBE         shift and go to state 55
    LPAREN          shift and go to state 53
    SI              shift and go to state 56
    MIENTRAS        shift and go to state 57
    REGRESA         shift and go to state 58
    DESDE           shift and go to state 59

  ! RBRACKET        [ reduce using rule 29 (mult_estatutos -> estatuto .) ]

    estatuto                       shift and go to state 41
    mult_estatutos                 shift and go to state 64
    empty                          shift and go to state 42
    asigna                         shift and go to state 43
    llamada                        shift and go to state 44
    lee                            shift and go to state 45
    escribe                        shift and go to state 46
    condicion                      shift and go to state 47
    ciclo_w                        shift and go to state 48
    retorno                        shift and go to state 49
    ciclo_f                        shift and go to state 50
    variable                       shift and go to state 51

state 42

    (31) mult_estatutos -> empty .

    RBRACKET        reduce using rule 31 (mult_estatutos -> empty .)


state 43

    (32) estatuto -> asigna .

    ID              reduce using rule 32 (estatuto -> asigna .)
    LEE             reduce using rule 32 (estatuto -> asigna .)
    ESCRIBE         reduce using rule 32 (estatuto -> asigna .)
    LPAREN          reduce using rule 32 (estatuto -> asigna .)
    SI              reduce using rule 32 (estatuto -> asigna .)
    MIENTRAS        reduce using rule 32 (estatuto -> asigna .)
    REGRESA         reduce using rule 32 (estatuto -> asigna .)
    DESDE           reduce using rule 32 (estatuto -> asigna .)
    RBRACKET        reduce using rule 32 (estatuto -> asigna .)


state 44

    (33) estatuto -> llamada .

    ID              reduce using rule 33 (estatuto -> llamada .)
    LEE             reduce using rule 33 (estatuto -> llamada .)
    ESCRIBE         reduce using rule 33 (estatuto -> llamada .)
    LPAREN          reduce using rule 33 (estatuto -> llamada .)
    SI              reduce using rule 33 (estatuto -> llamada .)
    MIENTRAS        reduce using rule 33 (estatuto -> llamada .)
    REGRESA         reduce using rule 33 (estatuto -> llamada .)
    DESDE           reduce using rule 33 (estatuto -> llamada .)
    RBRACKET        reduce using rule 33 (estatuto -> llamada .)


state 45

    (34) estatuto -> lee .

    ID              reduce using rule 34 (estatuto -> lee .)
    LEE             reduce using rule 34 (estatuto -> lee .)
    ESCRIBE         reduce using rule 34 (estatuto -> lee .)
    LPAREN          reduce using rule 34 (estatuto -> lee .)
    SI              reduce using rule 34 (estatuto -> lee .)
    MIENTRAS        reduce using rule 34 (estatuto -> lee .)
    REGRESA         reduce using rule 34 (estatuto -> lee .)
    DESDE           reduce using rule 34 (estatuto -> lee .)
    RBRACKET        reduce using rule 34 (estatuto -> lee .)


state 46

    (35) estatuto -> escribe .

    ID              reduce using rule 35 (estatuto -> escribe .)
    LEE             reduce using rule 35 (estatuto -> escribe .)
    ESCRIBE         reduce using rule 35 (estatuto -> escribe .)
    LPAREN          reduce using rule 35 (estatuto -> escribe .)
    SI              reduce using rule 35 (estatuto -> escribe .)
    MIENTRAS        reduce using rule 35 (estatuto -> escribe .)
    REGRESA         reduce using rule 35 (estatuto -> escribe .)
    DESDE           reduce using rule 35 (estatuto -> escribe .)
    RBRACKET        reduce using rule 35 (estatuto -> escribe .)


state 47

    (36) estatuto -> condicion .

    ID              reduce using rule 36 (estatuto -> condicion .)
    LEE             reduce using rule 36 (estatuto -> condicion .)
    ESCRIBE         reduce using rule 36 (estatuto -> condicion .)
    LPAREN          reduce using rule 36 (estatuto -> condicion .)
    SI              reduce using rule 36 (estatuto -> condicion .)
    MIENTRAS        reduce using rule 36 (estatuto -> condicion .)
    REGRESA         reduce using rule 36 (estatuto -> condicion .)
    DESDE           reduce using rule 36 (estatuto -> condicion .)
    RBRACKET        reduce using rule 36 (estatuto -> condicion .)


state 48

    (37) estatuto -> ciclo_w .

    ID              reduce using rule 37 (estatuto -> ciclo_w .)
    LEE             reduce using rule 37 (estatuto -> ciclo_w .)
    ESCRIBE         reduce using rule 37 (estatuto -> ciclo_w .)
    LPAREN          reduce using rule 37 (estatuto -> ciclo_w .)
    SI              reduce using rule 37 (estatuto -> ciclo_w .)
    MIENTRAS        reduce using rule 37 (estatuto -> ciclo_w .)
    REGRESA         reduce using rule 37 (estatuto -> ciclo_w .)
    DESDE           reduce using rule 37 (estatuto -> ciclo_w .)
    RBRACKET        reduce using rule 37 (estatuto -> ciclo_w .)


state 49

    (38) estatuto -> retorno .

    ID              reduce using rule 38 (estatuto -> retorno .)
    LEE             reduce using rule 38 (estatuto -> retorno .)
    ESCRIBE         reduce using rule 38 (estatuto -> retorno .)
    LPAREN          reduce using rule 38 (estatuto -> retorno .)
    SI              reduce using rule 38 (estatuto -> retorno .)
    MIENTRAS        reduce using rule 38 (estatuto -> retorno .)
    REGRESA         reduce using rule 38 (estatuto -> retorno .)
    DESDE           reduce using rule 38 (estatuto -> retorno .)
    RBRACKET        reduce using rule 38 (estatuto -> retorno .)


state 50

    (39) estatuto -> ciclo_f .

    ID              reduce using rule 39 (estatuto -> ciclo_f .)
    LEE             reduce using rule 39 (estatuto -> ciclo_f .)
    ESCRIBE         reduce using rule 39 (estatuto -> ciclo_f .)
    LPAREN          reduce using rule 39 (estatuto -> ciclo_f .)
    SI              reduce using rule 39 (estatuto -> ciclo_f .)
    MIENTRAS        reduce using rule 39 (estatuto -> ciclo_f .)
    REGRESA         reduce using rule 39 (estatuto -> ciclo_f .)
    DESDE           reduce using rule 39 (estatuto -> ciclo_f .)
    RBRACKET        reduce using rule 39 (estatuto -> ciclo_f .)


state 51

    (40) asigna -> variable . EQUAL exp SEMICOLON

    EQUAL           shift and go to state 65


state 52

    (41) llamada -> ID . LPAREN mult_exp RPAREN
    (17) variable -> ID . LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> ID . LSQUARE exp RSQUARE
    (19) variable -> ID .

    LPAREN          shift and go to state 66
    LSQUARE         shift and go to state 67
    EQUAL           reduce using rule 19 (variable -> ID .)


state 53

    (47) escribe -> LPAREN . mult_cte_s RPAREN SEMICOLON
    (48) mult_cte_s -> . CTE_S
    (49) mult_cte_s -> . CTE_S COMMA mult_cte_s
    (50) mult_cte_s -> . empty
    (27) empty -> .

    CTE_S           shift and go to state 69
    RPAREN          reduce using rule 27 (empty -> .)

    mult_cte_s                     shift and go to state 68
    empty                          shift and go to state 70

state 54

    (45) lee -> LEE . LPAREN variable RPAREN

    LPAREN          shift and go to state 71


state 55

    (46) escribe -> ESCRIBE . LPAREN mult_exp RPAREN SEMICOLON

    LPAREN          shift and go to state 72


state 56

    (77) condicion -> SI . LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON
    (78) condicion -> SI . LPAREN exp RPAREN ENTONCES bloque SEMICOLON

    LPAREN          shift and go to state 73


state 57

    (79) ciclo_w -> MIENTRAS . LPAREN exp RPAREN HAZ bloque

    LPAREN          shift and go to state 74


state 58

    (84) retorno -> REGRESA . exp SEMICOLON
    (51) exp -> . t_exp OR exp
    (52) exp -> . t_exp
    (53) t_exp -> . g_exp AND t_exp
    (54) t_exp -> . g_exp
    (55) g_exp -> . m_exp
    (56) g_exp -> . LESSTHAN m_exp
    (57) g_exp -> . LESSEQUAL m_exp
    (58) g_exp -> . GREATERTHAN m_exp
    (59) g_exp -> . GREATEREQUAL m_exp
    (60) g_exp -> . EQUAL m_exp
    (61) g_exp -> . NOEQUAL m_exp
    (62) m_exp -> . t
    (63) m_exp -> . t PLUS m_exp
    (64) m_exp -> . t MINUS m_exp
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LESSTHAN        shift and go to state 79
    LESSEQUAL       shift and go to state 80
    GREATERTHAN     shift and go to state 81
    GREATEREQUAL    shift and go to state 82
    EQUAL           shift and go to state 83
    NOEQUAL         shift and go to state 84
    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    exp                            shift and go to state 75
    t_exp                          shift and go to state 76
    g_exp                          shift and go to state 77
    m_exp                          shift and go to state 78
    t                              shift and go to state 85
    f                              shift and go to state 86
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 59

    (80) ciclo_f -> DESDE . asigna HASTA CTE_I HACER bloque
    (40) asigna -> . variable EQUAL exp SEMICOLON
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID

    ID              shift and go to state 95

    asigna                         shift and go to state 94
    variable                       shift and go to state 51

state 60

    (12) vars_aux2 -> ID LSQUARE CTE_I RSQUARE .
    (13) vars_aux2 -> ID LSQUARE CTE_I RSQUARE . LSQUARE CTE_I RSQUARE

    SEMICOLON       reduce using rule 12 (vars_aux2 -> ID LSQUARE CTE_I RSQUARE .)
    COMMA           reduce using rule 12 (vars_aux2 -> ID LSQUARE CTE_I RSQUARE .)
    LSQUARE         shift and go to state 96


state 61

    (20) funcion -> FUNCION LESSTHAN tipo_simple GREATERTHAN ID LPAREN . param RPAREN vars SEMICOLON bloque
    (21) funcion -> FUNCION LESSTHAN tipo_simple GREATERTHAN ID LPAREN . param RPAREN SEMICOLON bloque
    (24) param -> . ID
    (25) param -> . ID param
    (26) param -> . empty
    (27) empty -> .

    ID              shift and go to state 97
    RPAREN          reduce using rule 27 (empty -> .)

    param                          shift and go to state 98
    empty                          shift and go to state 99

state 62

    (22) funcion -> FUNCION LESSTHAN VOID GREATERTHAN ID LPAREN . param RPAREN vars SEMICOLON bloque
    (23) funcion -> FUNCION LESSTHAN VOID GREATERTHAN ID LPAREN . param RPAREN SEMICOLON bloque
    (24) param -> . ID
    (25) param -> . ID param
    (26) param -> . empty
    (27) empty -> .

    ID              shift and go to state 97
    RPAREN          reduce using rule 27 (empty -> .)

    param                          shift and go to state 100
    empty                          shift and go to state 99

state 63

    (28) bloque -> LBRACKET mult_estatutos RBRACKET .

    $end            reduce using rule 28 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    PRINCIPAL       reduce using rule 28 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    SINO            reduce using rule 28 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    SEMICOLON       reduce using rule 28 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    ID              reduce using rule 28 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    LEE             reduce using rule 28 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    ESCRIBE         reduce using rule 28 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    LPAREN          reduce using rule 28 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    SI              reduce using rule 28 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    MIENTRAS        reduce using rule 28 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    REGRESA         reduce using rule 28 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    DESDE           reduce using rule 28 (bloque -> LBRACKET mult_estatutos RBRACKET .)
    RBRACKET        reduce using rule 28 (bloque -> LBRACKET mult_estatutos RBRACKET .)


state 64

    (30) mult_estatutos -> estatuto mult_estatutos .

    RBRACKET        reduce using rule 30 (mult_estatutos -> estatuto mult_estatutos .)


state 65

    (40) asigna -> variable EQUAL . exp SEMICOLON
    (51) exp -> . t_exp OR exp
    (52) exp -> . t_exp
    (53) t_exp -> . g_exp AND t_exp
    (54) t_exp -> . g_exp
    (55) g_exp -> . m_exp
    (56) g_exp -> . LESSTHAN m_exp
    (57) g_exp -> . LESSEQUAL m_exp
    (58) g_exp -> . GREATERTHAN m_exp
    (59) g_exp -> . GREATEREQUAL m_exp
    (60) g_exp -> . EQUAL m_exp
    (61) g_exp -> . NOEQUAL m_exp
    (62) m_exp -> . t
    (63) m_exp -> . t PLUS m_exp
    (64) m_exp -> . t MINUS m_exp
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LESSTHAN        shift and go to state 79
    LESSEQUAL       shift and go to state 80
    GREATERTHAN     shift and go to state 81
    GREATEREQUAL    shift and go to state 82
    EQUAL           shift and go to state 83
    NOEQUAL         shift and go to state 84
    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    variable                       shift and go to state 91
    exp                            shift and go to state 101
    t_exp                          shift and go to state 76
    g_exp                          shift and go to state 77
    m_exp                          shift and go to state 78
    t                              shift and go to state 85
    f                              shift and go to state 86
    llamada                        shift and go to state 92

state 66

    (41) llamada -> ID LPAREN . mult_exp RPAREN
    (42) mult_exp -> . exp
    (43) mult_exp -> . exp COMMA mult_exp
    (44) mult_exp -> . empty
    (51) exp -> . t_exp OR exp
    (52) exp -> . t_exp
    (27) empty -> .
    (53) t_exp -> . g_exp AND t_exp
    (54) t_exp -> . g_exp
    (55) g_exp -> . m_exp
    (56) g_exp -> . LESSTHAN m_exp
    (57) g_exp -> . LESSEQUAL m_exp
    (58) g_exp -> . GREATERTHAN m_exp
    (59) g_exp -> . GREATEREQUAL m_exp
    (60) g_exp -> . EQUAL m_exp
    (61) g_exp -> . NOEQUAL m_exp
    (62) m_exp -> . t
    (63) m_exp -> . t PLUS m_exp
    (64) m_exp -> . t MINUS m_exp
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    RPAREN          reduce using rule 27 (empty -> .)
    LESSTHAN        shift and go to state 79
    LESSEQUAL       shift and go to state 80
    GREATERTHAN     shift and go to state 81
    GREATEREQUAL    shift and go to state 82
    EQUAL           shift and go to state 83
    NOEQUAL         shift and go to state 84
    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    mult_exp                       shift and go to state 102
    exp                            shift and go to state 103
    empty                          shift and go to state 104
    t_exp                          shift and go to state 76
    g_exp                          shift and go to state 77
    m_exp                          shift and go to state 78
    t                              shift and go to state 85
    f                              shift and go to state 86
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 67

    (17) variable -> ID LSQUARE . exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> ID LSQUARE . exp RSQUARE
    (51) exp -> . t_exp OR exp
    (52) exp -> . t_exp
    (53) t_exp -> . g_exp AND t_exp
    (54) t_exp -> . g_exp
    (55) g_exp -> . m_exp
    (56) g_exp -> . LESSTHAN m_exp
    (57) g_exp -> . LESSEQUAL m_exp
    (58) g_exp -> . GREATERTHAN m_exp
    (59) g_exp -> . GREATEREQUAL m_exp
    (60) g_exp -> . EQUAL m_exp
    (61) g_exp -> . NOEQUAL m_exp
    (62) m_exp -> . t
    (63) m_exp -> . t PLUS m_exp
    (64) m_exp -> . t MINUS m_exp
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LESSTHAN        shift and go to state 79
    LESSEQUAL       shift and go to state 80
    GREATERTHAN     shift and go to state 81
    GREATEREQUAL    shift and go to state 82
    EQUAL           shift and go to state 83
    NOEQUAL         shift and go to state 84
    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    exp                            shift and go to state 105
    t_exp                          shift and go to state 76
    g_exp                          shift and go to state 77
    m_exp                          shift and go to state 78
    t                              shift and go to state 85
    f                              shift and go to state 86
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 68

    (47) escribe -> LPAREN mult_cte_s . RPAREN SEMICOLON

    RPAREN          shift and go to state 106


state 69

    (48) mult_cte_s -> CTE_S .
    (49) mult_cte_s -> CTE_S . COMMA mult_cte_s

    RPAREN          reduce using rule 48 (mult_cte_s -> CTE_S .)
    COMMA           shift and go to state 107


state 70

    (50) mult_cte_s -> empty .

    RPAREN          reduce using rule 50 (mult_cte_s -> empty .)


state 71

    (45) lee -> LEE LPAREN . variable RPAREN
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID

    ID              shift and go to state 95

    variable                       shift and go to state 108

state 72

    (46) escribe -> ESCRIBE LPAREN . mult_exp RPAREN SEMICOLON
    (42) mult_exp -> . exp
    (43) mult_exp -> . exp COMMA mult_exp
    (44) mult_exp -> . empty
    (51) exp -> . t_exp OR exp
    (52) exp -> . t_exp
    (27) empty -> .
    (53) t_exp -> . g_exp AND t_exp
    (54) t_exp -> . g_exp
    (55) g_exp -> . m_exp
    (56) g_exp -> . LESSTHAN m_exp
    (57) g_exp -> . LESSEQUAL m_exp
    (58) g_exp -> . GREATERTHAN m_exp
    (59) g_exp -> . GREATEREQUAL m_exp
    (60) g_exp -> . EQUAL m_exp
    (61) g_exp -> . NOEQUAL m_exp
    (62) m_exp -> . t
    (63) m_exp -> . t PLUS m_exp
    (64) m_exp -> . t MINUS m_exp
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    RPAREN          reduce using rule 27 (empty -> .)
    LESSTHAN        shift and go to state 79
    LESSEQUAL       shift and go to state 80
    GREATERTHAN     shift and go to state 81
    GREATEREQUAL    shift and go to state 82
    EQUAL           shift and go to state 83
    NOEQUAL         shift and go to state 84
    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    mult_exp                       shift and go to state 109
    exp                            shift and go to state 103
    empty                          shift and go to state 104
    t_exp                          shift and go to state 76
    g_exp                          shift and go to state 77
    m_exp                          shift and go to state 78
    t                              shift and go to state 85
    f                              shift and go to state 86
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 73

    (77) condicion -> SI LPAREN . exp RPAREN ENTONCES bloque SINO bloque SEMICOLON
    (78) condicion -> SI LPAREN . exp RPAREN ENTONCES bloque SEMICOLON
    (51) exp -> . t_exp OR exp
    (52) exp -> . t_exp
    (53) t_exp -> . g_exp AND t_exp
    (54) t_exp -> . g_exp
    (55) g_exp -> . m_exp
    (56) g_exp -> . LESSTHAN m_exp
    (57) g_exp -> . LESSEQUAL m_exp
    (58) g_exp -> . GREATERTHAN m_exp
    (59) g_exp -> . GREATEREQUAL m_exp
    (60) g_exp -> . EQUAL m_exp
    (61) g_exp -> . NOEQUAL m_exp
    (62) m_exp -> . t
    (63) m_exp -> . t PLUS m_exp
    (64) m_exp -> . t MINUS m_exp
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LESSTHAN        shift and go to state 79
    LESSEQUAL       shift and go to state 80
    GREATERTHAN     shift and go to state 81
    GREATEREQUAL    shift and go to state 82
    EQUAL           shift and go to state 83
    NOEQUAL         shift and go to state 84
    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    exp                            shift and go to state 110
    t_exp                          shift and go to state 76
    g_exp                          shift and go to state 77
    m_exp                          shift and go to state 78
    t                              shift and go to state 85
    f                              shift and go to state 86
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 74

    (79) ciclo_w -> MIENTRAS LPAREN . exp RPAREN HAZ bloque
    (51) exp -> . t_exp OR exp
    (52) exp -> . t_exp
    (53) t_exp -> . g_exp AND t_exp
    (54) t_exp -> . g_exp
    (55) g_exp -> . m_exp
    (56) g_exp -> . LESSTHAN m_exp
    (57) g_exp -> . LESSEQUAL m_exp
    (58) g_exp -> . GREATERTHAN m_exp
    (59) g_exp -> . GREATEREQUAL m_exp
    (60) g_exp -> . EQUAL m_exp
    (61) g_exp -> . NOEQUAL m_exp
    (62) m_exp -> . t
    (63) m_exp -> . t PLUS m_exp
    (64) m_exp -> . t MINUS m_exp
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LESSTHAN        shift and go to state 79
    LESSEQUAL       shift and go to state 80
    GREATERTHAN     shift and go to state 81
    GREATEREQUAL    shift and go to state 82
    EQUAL           shift and go to state 83
    NOEQUAL         shift and go to state 84
    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    exp                            shift and go to state 111
    t_exp                          shift and go to state 76
    g_exp                          shift and go to state 77
    m_exp                          shift and go to state 78
    t                              shift and go to state 85
    f                              shift and go to state 86
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 75

    (84) retorno -> REGRESA exp . SEMICOLON

    SEMICOLON       shift and go to state 112


state 76

    (51) exp -> t_exp . OR exp
    (52) exp -> t_exp .

    OR              shift and go to state 113
    SEMICOLON       reduce using rule 52 (exp -> t_exp .)
    COMMA           reduce using rule 52 (exp -> t_exp .)
    RPAREN          reduce using rule 52 (exp -> t_exp .)
    RSQUARE         reduce using rule 52 (exp -> t_exp .)


state 77

    (53) t_exp -> g_exp . AND t_exp
    (54) t_exp -> g_exp .

    AND             shift and go to state 114
    OR              reduce using rule 54 (t_exp -> g_exp .)
    SEMICOLON       reduce using rule 54 (t_exp -> g_exp .)
    COMMA           reduce using rule 54 (t_exp -> g_exp .)
    RPAREN          reduce using rule 54 (t_exp -> g_exp .)
    RSQUARE         reduce using rule 54 (t_exp -> g_exp .)


state 78

    (55) g_exp -> m_exp .

    AND             reduce using rule 55 (g_exp -> m_exp .)
    OR              reduce using rule 55 (g_exp -> m_exp .)
    SEMICOLON       reduce using rule 55 (g_exp -> m_exp .)
    COMMA           reduce using rule 55 (g_exp -> m_exp .)
    RPAREN          reduce using rule 55 (g_exp -> m_exp .)
    RSQUARE         reduce using rule 55 (g_exp -> m_exp .)


state 79

    (56) g_exp -> LESSTHAN . m_exp
    (62) m_exp -> . t
    (63) m_exp -> . t PLUS m_exp
    (64) m_exp -> . t MINUS m_exp
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    m_exp                          shift and go to state 115
    t                              shift and go to state 85
    f                              shift and go to state 86
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 80

    (57) g_exp -> LESSEQUAL . m_exp
    (62) m_exp -> . t
    (63) m_exp -> . t PLUS m_exp
    (64) m_exp -> . t MINUS m_exp
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    m_exp                          shift and go to state 116
    t                              shift and go to state 85
    f                              shift and go to state 86
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 81

    (58) g_exp -> GREATERTHAN . m_exp
    (62) m_exp -> . t
    (63) m_exp -> . t PLUS m_exp
    (64) m_exp -> . t MINUS m_exp
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    m_exp                          shift and go to state 117
    t                              shift and go to state 85
    f                              shift and go to state 86
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 82

    (59) g_exp -> GREATEREQUAL . m_exp
    (62) m_exp -> . t
    (63) m_exp -> . t PLUS m_exp
    (64) m_exp -> . t MINUS m_exp
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    m_exp                          shift and go to state 118
    t                              shift and go to state 85
    f                              shift and go to state 86
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 83

    (60) g_exp -> EQUAL . m_exp
    (62) m_exp -> . t
    (63) m_exp -> . t PLUS m_exp
    (64) m_exp -> . t MINUS m_exp
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    m_exp                          shift and go to state 119
    t                              shift and go to state 85
    f                              shift and go to state 86
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 84

    (61) g_exp -> NOEQUAL . m_exp
    (62) m_exp -> . t
    (63) m_exp -> . t PLUS m_exp
    (64) m_exp -> . t MINUS m_exp
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    m_exp                          shift and go to state 120
    t                              shift and go to state 85
    f                              shift and go to state 86
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 85

    (62) m_exp -> t .
    (63) m_exp -> t . PLUS m_exp
    (64) m_exp -> t . MINUS m_exp

    AND             reduce using rule 62 (m_exp -> t .)
    OR              reduce using rule 62 (m_exp -> t .)
    SEMICOLON       reduce using rule 62 (m_exp -> t .)
    COMMA           reduce using rule 62 (m_exp -> t .)
    RPAREN          reduce using rule 62 (m_exp -> t .)
    RSQUARE         reduce using rule 62 (m_exp -> t .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122


state 86

    (65) t -> f .
    (66) t -> f . MULT t
    (67) t -> f . DIV t
    (68) t -> f . DETER t
    (69) t -> f . TRANS t
    (70) t -> f . INVER t

    PLUS            reduce using rule 65 (t -> f .)
    MINUS           reduce using rule 65 (t -> f .)
    AND             reduce using rule 65 (t -> f .)
    OR              reduce using rule 65 (t -> f .)
    SEMICOLON       reduce using rule 65 (t -> f .)
    COMMA           reduce using rule 65 (t -> f .)
    RPAREN          reduce using rule 65 (t -> f .)
    RSQUARE         reduce using rule 65 (t -> f .)
    MULT            shift and go to state 123
    DIV             shift and go to state 124
    DETER           shift and go to state 125
    TRANS           shift and go to state 126
    INVER           shift and go to state 127


state 87

    (71) f -> LPAREN . exp RPAREN
    (51) exp -> . t_exp OR exp
    (52) exp -> . t_exp
    (53) t_exp -> . g_exp AND t_exp
    (54) t_exp -> . g_exp
    (55) g_exp -> . m_exp
    (56) g_exp -> . LESSTHAN m_exp
    (57) g_exp -> . LESSEQUAL m_exp
    (58) g_exp -> . GREATERTHAN m_exp
    (59) g_exp -> . GREATEREQUAL m_exp
    (60) g_exp -> . EQUAL m_exp
    (61) g_exp -> . NOEQUAL m_exp
    (62) m_exp -> . t
    (63) m_exp -> . t PLUS m_exp
    (64) m_exp -> . t MINUS m_exp
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LESSTHAN        shift and go to state 79
    LESSEQUAL       shift and go to state 80
    GREATERTHAN     shift and go to state 81
    GREATEREQUAL    shift and go to state 82
    EQUAL           shift and go to state 83
    NOEQUAL         shift and go to state 84
    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    exp                            shift and go to state 128
    t_exp                          shift and go to state 76
    g_exp                          shift and go to state 77
    m_exp                          shift and go to state 78
    t                              shift and go to state 85
    f                              shift and go to state 86
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 88

    (72) f -> CTE_I .

    MULT            reduce using rule 72 (f -> CTE_I .)
    DIV             reduce using rule 72 (f -> CTE_I .)
    DETER           reduce using rule 72 (f -> CTE_I .)
    TRANS           reduce using rule 72 (f -> CTE_I .)
    INVER           reduce using rule 72 (f -> CTE_I .)
    PLUS            reduce using rule 72 (f -> CTE_I .)
    MINUS           reduce using rule 72 (f -> CTE_I .)
    AND             reduce using rule 72 (f -> CTE_I .)
    OR              reduce using rule 72 (f -> CTE_I .)
    SEMICOLON       reduce using rule 72 (f -> CTE_I .)
    COMMA           reduce using rule 72 (f -> CTE_I .)
    RPAREN          reduce using rule 72 (f -> CTE_I .)
    RSQUARE         reduce using rule 72 (f -> CTE_I .)


state 89

    (73) f -> CTE_F .

    MULT            reduce using rule 73 (f -> CTE_F .)
    DIV             reduce using rule 73 (f -> CTE_F .)
    DETER           reduce using rule 73 (f -> CTE_F .)
    TRANS           reduce using rule 73 (f -> CTE_F .)
    INVER           reduce using rule 73 (f -> CTE_F .)
    PLUS            reduce using rule 73 (f -> CTE_F .)
    MINUS           reduce using rule 73 (f -> CTE_F .)
    AND             reduce using rule 73 (f -> CTE_F .)
    OR              reduce using rule 73 (f -> CTE_F .)
    SEMICOLON       reduce using rule 73 (f -> CTE_F .)
    COMMA           reduce using rule 73 (f -> CTE_F .)
    RPAREN          reduce using rule 73 (f -> CTE_F .)
    RSQUARE         reduce using rule 73 (f -> CTE_F .)


state 90

    (74) f -> CTE_C .

    MULT            reduce using rule 74 (f -> CTE_C .)
    DIV             reduce using rule 74 (f -> CTE_C .)
    DETER           reduce using rule 74 (f -> CTE_C .)
    TRANS           reduce using rule 74 (f -> CTE_C .)
    INVER           reduce using rule 74 (f -> CTE_C .)
    PLUS            reduce using rule 74 (f -> CTE_C .)
    MINUS           reduce using rule 74 (f -> CTE_C .)
    AND             reduce using rule 74 (f -> CTE_C .)
    OR              reduce using rule 74 (f -> CTE_C .)
    SEMICOLON       reduce using rule 74 (f -> CTE_C .)
    COMMA           reduce using rule 74 (f -> CTE_C .)
    RPAREN          reduce using rule 74 (f -> CTE_C .)
    RSQUARE         reduce using rule 74 (f -> CTE_C .)


state 91

    (75) f -> variable .

    MULT            reduce using rule 75 (f -> variable .)
    DIV             reduce using rule 75 (f -> variable .)
    DETER           reduce using rule 75 (f -> variable .)
    TRANS           reduce using rule 75 (f -> variable .)
    INVER           reduce using rule 75 (f -> variable .)
    PLUS            reduce using rule 75 (f -> variable .)
    MINUS           reduce using rule 75 (f -> variable .)
    AND             reduce using rule 75 (f -> variable .)
    OR              reduce using rule 75 (f -> variable .)
    SEMICOLON       reduce using rule 75 (f -> variable .)
    COMMA           reduce using rule 75 (f -> variable .)
    RPAREN          reduce using rule 75 (f -> variable .)
    RSQUARE         reduce using rule 75 (f -> variable .)


state 92

    (76) f -> llamada .

    MULT            reduce using rule 76 (f -> llamada .)
    DIV             reduce using rule 76 (f -> llamada .)
    DETER           reduce using rule 76 (f -> llamada .)
    TRANS           reduce using rule 76 (f -> llamada .)
    INVER           reduce using rule 76 (f -> llamada .)
    PLUS            reduce using rule 76 (f -> llamada .)
    MINUS           reduce using rule 76 (f -> llamada .)
    AND             reduce using rule 76 (f -> llamada .)
    OR              reduce using rule 76 (f -> llamada .)
    SEMICOLON       reduce using rule 76 (f -> llamada .)
    COMMA           reduce using rule 76 (f -> llamada .)
    RPAREN          reduce using rule 76 (f -> llamada .)
    RSQUARE         reduce using rule 76 (f -> llamada .)


state 93

    (17) variable -> ID . LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> ID . LSQUARE exp RSQUARE
    (19) variable -> ID .
    (41) llamada -> ID . LPAREN mult_exp RPAREN

    LSQUARE         shift and go to state 67
    MULT            reduce using rule 19 (variable -> ID .)
    DIV             reduce using rule 19 (variable -> ID .)
    DETER           reduce using rule 19 (variable -> ID .)
    TRANS           reduce using rule 19 (variable -> ID .)
    INVER           reduce using rule 19 (variable -> ID .)
    PLUS            reduce using rule 19 (variable -> ID .)
    MINUS           reduce using rule 19 (variable -> ID .)
    AND             reduce using rule 19 (variable -> ID .)
    OR              reduce using rule 19 (variable -> ID .)
    SEMICOLON       reduce using rule 19 (variable -> ID .)
    COMMA           reduce using rule 19 (variable -> ID .)
    RPAREN          reduce using rule 19 (variable -> ID .)
    RSQUARE         reduce using rule 19 (variable -> ID .)
    LPAREN          shift and go to state 66


state 94

    (80) ciclo_f -> DESDE asigna . HASTA CTE_I HACER bloque

    HASTA           shift and go to state 129


state 95

    (17) variable -> ID . LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> ID . LSQUARE exp RSQUARE
    (19) variable -> ID .

    LSQUARE         shift and go to state 67
    EQUAL           reduce using rule 19 (variable -> ID .)
    RPAREN          reduce using rule 19 (variable -> ID .)


state 96

    (13) vars_aux2 -> ID LSQUARE CTE_I RSQUARE LSQUARE . CTE_I RSQUARE

    CTE_I           shift and go to state 130


state 97

    (24) param -> ID .
    (25) param -> ID . param
    (24) param -> . ID
    (25) param -> . ID param
    (26) param -> . empty
    (27) empty -> .

  ! reduce/reduce conflict for RPAREN resolved using rule 24 (param -> ID .)
    RPAREN          reduce using rule 24 (param -> ID .)
    ID              shift and go to state 97

  ! RPAREN          [ reduce using rule 27 (empty -> .) ]

    param                          shift and go to state 131
    empty                          shift and go to state 99

state 98

    (20) funcion -> FUNCION LESSTHAN tipo_simple GREATERTHAN ID LPAREN param . RPAREN vars SEMICOLON bloque
    (21) funcion -> FUNCION LESSTHAN tipo_simple GREATERTHAN ID LPAREN param . RPAREN SEMICOLON bloque

    RPAREN          shift and go to state 132


state 99

    (26) param -> empty .

    RPAREN          reduce using rule 26 (param -> empty .)


state 100

    (22) funcion -> FUNCION LESSTHAN VOID GREATERTHAN ID LPAREN param . RPAREN vars SEMICOLON bloque
    (23) funcion -> FUNCION LESSTHAN VOID GREATERTHAN ID LPAREN param . RPAREN SEMICOLON bloque

    RPAREN          shift and go to state 133


state 101

    (40) asigna -> variable EQUAL exp . SEMICOLON

    SEMICOLON       shift and go to state 134


state 102

    (41) llamada -> ID LPAREN mult_exp . RPAREN

    RPAREN          shift and go to state 135


state 103

    (42) mult_exp -> exp .
    (43) mult_exp -> exp . COMMA mult_exp

    RPAREN          reduce using rule 42 (mult_exp -> exp .)
    COMMA           shift and go to state 136


state 104

    (44) mult_exp -> empty .

    RPAREN          reduce using rule 44 (mult_exp -> empty .)


state 105

    (17) variable -> ID LSQUARE exp . RSQUARE LSQUARE exp RSQUARE
    (18) variable -> ID LSQUARE exp . RSQUARE

    RSQUARE         shift and go to state 137


state 106

    (47) escribe -> LPAREN mult_cte_s RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 138


state 107

    (49) mult_cte_s -> CTE_S COMMA . mult_cte_s
    (48) mult_cte_s -> . CTE_S
    (49) mult_cte_s -> . CTE_S COMMA mult_cte_s
    (50) mult_cte_s -> . empty
    (27) empty -> .

    CTE_S           shift and go to state 69
    RPAREN          reduce using rule 27 (empty -> .)

    mult_cte_s                     shift and go to state 139
    empty                          shift and go to state 70

state 108

    (45) lee -> LEE LPAREN variable . RPAREN

    RPAREN          shift and go to state 140


state 109

    (46) escribe -> ESCRIBE LPAREN mult_exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 141


state 110

    (77) condicion -> SI LPAREN exp . RPAREN ENTONCES bloque SINO bloque SEMICOLON
    (78) condicion -> SI LPAREN exp . RPAREN ENTONCES bloque SEMICOLON

    RPAREN          shift and go to state 142


state 111

    (79) ciclo_w -> MIENTRAS LPAREN exp . RPAREN HAZ bloque

    RPAREN          shift and go to state 143


state 112

    (84) retorno -> REGRESA exp SEMICOLON .

    ID              reduce using rule 84 (retorno -> REGRESA exp SEMICOLON .)
    LEE             reduce using rule 84 (retorno -> REGRESA exp SEMICOLON .)
    ESCRIBE         reduce using rule 84 (retorno -> REGRESA exp SEMICOLON .)
    LPAREN          reduce using rule 84 (retorno -> REGRESA exp SEMICOLON .)
    SI              reduce using rule 84 (retorno -> REGRESA exp SEMICOLON .)
    MIENTRAS        reduce using rule 84 (retorno -> REGRESA exp SEMICOLON .)
    REGRESA         reduce using rule 84 (retorno -> REGRESA exp SEMICOLON .)
    DESDE           reduce using rule 84 (retorno -> REGRESA exp SEMICOLON .)
    RBRACKET        reduce using rule 84 (retorno -> REGRESA exp SEMICOLON .)


state 113

    (51) exp -> t_exp OR . exp
    (51) exp -> . t_exp OR exp
    (52) exp -> . t_exp
    (53) t_exp -> . g_exp AND t_exp
    (54) t_exp -> . g_exp
    (55) g_exp -> . m_exp
    (56) g_exp -> . LESSTHAN m_exp
    (57) g_exp -> . LESSEQUAL m_exp
    (58) g_exp -> . GREATERTHAN m_exp
    (59) g_exp -> . GREATEREQUAL m_exp
    (60) g_exp -> . EQUAL m_exp
    (61) g_exp -> . NOEQUAL m_exp
    (62) m_exp -> . t
    (63) m_exp -> . t PLUS m_exp
    (64) m_exp -> . t MINUS m_exp
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LESSTHAN        shift and go to state 79
    LESSEQUAL       shift and go to state 80
    GREATERTHAN     shift and go to state 81
    GREATEREQUAL    shift and go to state 82
    EQUAL           shift and go to state 83
    NOEQUAL         shift and go to state 84
    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    t_exp                          shift and go to state 76
    exp                            shift and go to state 144
    g_exp                          shift and go to state 77
    m_exp                          shift and go to state 78
    t                              shift and go to state 85
    f                              shift and go to state 86
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 114

    (53) t_exp -> g_exp AND . t_exp
    (53) t_exp -> . g_exp AND t_exp
    (54) t_exp -> . g_exp
    (55) g_exp -> . m_exp
    (56) g_exp -> . LESSTHAN m_exp
    (57) g_exp -> . LESSEQUAL m_exp
    (58) g_exp -> . GREATERTHAN m_exp
    (59) g_exp -> . GREATEREQUAL m_exp
    (60) g_exp -> . EQUAL m_exp
    (61) g_exp -> . NOEQUAL m_exp
    (62) m_exp -> . t
    (63) m_exp -> . t PLUS m_exp
    (64) m_exp -> . t MINUS m_exp
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LESSTHAN        shift and go to state 79
    LESSEQUAL       shift and go to state 80
    GREATERTHAN     shift and go to state 81
    GREATEREQUAL    shift and go to state 82
    EQUAL           shift and go to state 83
    NOEQUAL         shift and go to state 84
    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    g_exp                          shift and go to state 77
    t_exp                          shift and go to state 145
    m_exp                          shift and go to state 78
    t                              shift and go to state 85
    f                              shift and go to state 86
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 115

    (56) g_exp -> LESSTHAN m_exp .

    AND             reduce using rule 56 (g_exp -> LESSTHAN m_exp .)
    OR              reduce using rule 56 (g_exp -> LESSTHAN m_exp .)
    SEMICOLON       reduce using rule 56 (g_exp -> LESSTHAN m_exp .)
    COMMA           reduce using rule 56 (g_exp -> LESSTHAN m_exp .)
    RPAREN          reduce using rule 56 (g_exp -> LESSTHAN m_exp .)
    RSQUARE         reduce using rule 56 (g_exp -> LESSTHAN m_exp .)


state 116

    (57) g_exp -> LESSEQUAL m_exp .

    AND             reduce using rule 57 (g_exp -> LESSEQUAL m_exp .)
    OR              reduce using rule 57 (g_exp -> LESSEQUAL m_exp .)
    SEMICOLON       reduce using rule 57 (g_exp -> LESSEQUAL m_exp .)
    COMMA           reduce using rule 57 (g_exp -> LESSEQUAL m_exp .)
    RPAREN          reduce using rule 57 (g_exp -> LESSEQUAL m_exp .)
    RSQUARE         reduce using rule 57 (g_exp -> LESSEQUAL m_exp .)


state 117

    (58) g_exp -> GREATERTHAN m_exp .

    AND             reduce using rule 58 (g_exp -> GREATERTHAN m_exp .)
    OR              reduce using rule 58 (g_exp -> GREATERTHAN m_exp .)
    SEMICOLON       reduce using rule 58 (g_exp -> GREATERTHAN m_exp .)
    COMMA           reduce using rule 58 (g_exp -> GREATERTHAN m_exp .)
    RPAREN          reduce using rule 58 (g_exp -> GREATERTHAN m_exp .)
    RSQUARE         reduce using rule 58 (g_exp -> GREATERTHAN m_exp .)


state 118

    (59) g_exp -> GREATEREQUAL m_exp .

    AND             reduce using rule 59 (g_exp -> GREATEREQUAL m_exp .)
    OR              reduce using rule 59 (g_exp -> GREATEREQUAL m_exp .)
    SEMICOLON       reduce using rule 59 (g_exp -> GREATEREQUAL m_exp .)
    COMMA           reduce using rule 59 (g_exp -> GREATEREQUAL m_exp .)
    RPAREN          reduce using rule 59 (g_exp -> GREATEREQUAL m_exp .)
    RSQUARE         reduce using rule 59 (g_exp -> GREATEREQUAL m_exp .)


state 119

    (60) g_exp -> EQUAL m_exp .

    AND             reduce using rule 60 (g_exp -> EQUAL m_exp .)
    OR              reduce using rule 60 (g_exp -> EQUAL m_exp .)
    SEMICOLON       reduce using rule 60 (g_exp -> EQUAL m_exp .)
    COMMA           reduce using rule 60 (g_exp -> EQUAL m_exp .)
    RPAREN          reduce using rule 60 (g_exp -> EQUAL m_exp .)
    RSQUARE         reduce using rule 60 (g_exp -> EQUAL m_exp .)


state 120

    (61) g_exp -> NOEQUAL m_exp .

    AND             reduce using rule 61 (g_exp -> NOEQUAL m_exp .)
    OR              reduce using rule 61 (g_exp -> NOEQUAL m_exp .)
    SEMICOLON       reduce using rule 61 (g_exp -> NOEQUAL m_exp .)
    COMMA           reduce using rule 61 (g_exp -> NOEQUAL m_exp .)
    RPAREN          reduce using rule 61 (g_exp -> NOEQUAL m_exp .)
    RSQUARE         reduce using rule 61 (g_exp -> NOEQUAL m_exp .)


state 121

    (63) m_exp -> t PLUS . m_exp
    (62) m_exp -> . t
    (63) m_exp -> . t PLUS m_exp
    (64) m_exp -> . t MINUS m_exp
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    t                              shift and go to state 85
    m_exp                          shift and go to state 146
    f                              shift and go to state 86
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 122

    (64) m_exp -> t MINUS . m_exp
    (62) m_exp -> . t
    (63) m_exp -> . t PLUS m_exp
    (64) m_exp -> . t MINUS m_exp
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    t                              shift and go to state 85
    m_exp                          shift and go to state 147
    f                              shift and go to state 86
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 123

    (66) t -> f MULT . t
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    f                              shift and go to state 86
    t                              shift and go to state 148
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 124

    (67) t -> f DIV . t
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    f                              shift and go to state 86
    t                              shift and go to state 149
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 125

    (68) t -> f DETER . t
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    f                              shift and go to state 86
    t                              shift and go to state 150
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 126

    (69) t -> f TRANS . t
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    f                              shift and go to state 86
    t                              shift and go to state 151
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 127

    (70) t -> f INVER . t
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    f                              shift and go to state 86
    t                              shift and go to state 152
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 128

    (71) f -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 153


state 129

    (80) ciclo_f -> DESDE asigna HASTA . CTE_I HACER bloque

    CTE_I           shift and go to state 154


state 130

    (13) vars_aux2 -> ID LSQUARE CTE_I RSQUARE LSQUARE CTE_I . RSQUARE

    RSQUARE         shift and go to state 155


state 131

    (25) param -> ID param .

    RPAREN          reduce using rule 25 (param -> ID param .)


state 132

    (20) funcion -> FUNCION LESSTHAN tipo_simple GREATERTHAN ID LPAREN param RPAREN . vars SEMICOLON bloque
    (21) funcion -> FUNCION LESSTHAN tipo_simple GREATERTHAN ID LPAREN param RPAREN . SEMICOLON bloque
    (6) vars -> . VAR vars_aux

    SEMICOLON       shift and go to state 157
    VAR             shift and go to state 8

    vars                           shift and go to state 156

state 133

    (22) funcion -> FUNCION LESSTHAN VOID GREATERTHAN ID LPAREN param RPAREN . vars SEMICOLON bloque
    (23) funcion -> FUNCION LESSTHAN VOID GREATERTHAN ID LPAREN param RPAREN . SEMICOLON bloque
    (6) vars -> . VAR vars_aux

    SEMICOLON       shift and go to state 159
    VAR             shift and go to state 8

    vars                           shift and go to state 158

state 134

    (40) asigna -> variable EQUAL exp SEMICOLON .

    ID              reduce using rule 40 (asigna -> variable EQUAL exp SEMICOLON .)
    LEE             reduce using rule 40 (asigna -> variable EQUAL exp SEMICOLON .)
    ESCRIBE         reduce using rule 40 (asigna -> variable EQUAL exp SEMICOLON .)
    LPAREN          reduce using rule 40 (asigna -> variable EQUAL exp SEMICOLON .)
    SI              reduce using rule 40 (asigna -> variable EQUAL exp SEMICOLON .)
    MIENTRAS        reduce using rule 40 (asigna -> variable EQUAL exp SEMICOLON .)
    REGRESA         reduce using rule 40 (asigna -> variable EQUAL exp SEMICOLON .)
    DESDE           reduce using rule 40 (asigna -> variable EQUAL exp SEMICOLON .)
    RBRACKET        reduce using rule 40 (asigna -> variable EQUAL exp SEMICOLON .)
    HASTA           reduce using rule 40 (asigna -> variable EQUAL exp SEMICOLON .)


state 135

    (41) llamada -> ID LPAREN mult_exp RPAREN .

    ID              reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)
    LEE             reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)
    ESCRIBE         reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)
    LPAREN          reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)
    SI              reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)
    MIENTRAS        reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)
    REGRESA         reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)
    DESDE           reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)
    RBRACKET        reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)
    MULT            reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)
    DIV             reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)
    DETER           reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)
    TRANS           reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)
    INVER           reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)
    PLUS            reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)
    MINUS           reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)
    AND             reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)
    OR              reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)
    SEMICOLON       reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)
    COMMA           reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)
    RPAREN          reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)
    RSQUARE         reduce using rule 41 (llamada -> ID LPAREN mult_exp RPAREN .)


state 136

    (43) mult_exp -> exp COMMA . mult_exp
    (42) mult_exp -> . exp
    (43) mult_exp -> . exp COMMA mult_exp
    (44) mult_exp -> . empty
    (51) exp -> . t_exp OR exp
    (52) exp -> . t_exp
    (27) empty -> .
    (53) t_exp -> . g_exp AND t_exp
    (54) t_exp -> . g_exp
    (55) g_exp -> . m_exp
    (56) g_exp -> . LESSTHAN m_exp
    (57) g_exp -> . LESSEQUAL m_exp
    (58) g_exp -> . GREATERTHAN m_exp
    (59) g_exp -> . GREATEREQUAL m_exp
    (60) g_exp -> . EQUAL m_exp
    (61) g_exp -> . NOEQUAL m_exp
    (62) m_exp -> . t
    (63) m_exp -> . t PLUS m_exp
    (64) m_exp -> . t MINUS m_exp
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    RPAREN          reduce using rule 27 (empty -> .)
    LESSTHAN        shift and go to state 79
    LESSEQUAL       shift and go to state 80
    GREATERTHAN     shift and go to state 81
    GREATEREQUAL    shift and go to state 82
    EQUAL           shift and go to state 83
    NOEQUAL         shift and go to state 84
    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    exp                            shift and go to state 103
    mult_exp                       shift and go to state 160
    empty                          shift and go to state 104
    t_exp                          shift and go to state 76
    g_exp                          shift and go to state 77
    m_exp                          shift and go to state 78
    t                              shift and go to state 85
    f                              shift and go to state 86
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 137

    (17) variable -> ID LSQUARE exp RSQUARE . LSQUARE exp RSQUARE
    (18) variable -> ID LSQUARE exp RSQUARE .

    LSQUARE         shift and go to state 161
    EQUAL           reduce using rule 18 (variable -> ID LSQUARE exp RSQUARE .)
    MULT            reduce using rule 18 (variable -> ID LSQUARE exp RSQUARE .)
    DIV             reduce using rule 18 (variable -> ID LSQUARE exp RSQUARE .)
    DETER           reduce using rule 18 (variable -> ID LSQUARE exp RSQUARE .)
    TRANS           reduce using rule 18 (variable -> ID LSQUARE exp RSQUARE .)
    INVER           reduce using rule 18 (variable -> ID LSQUARE exp RSQUARE .)
    PLUS            reduce using rule 18 (variable -> ID LSQUARE exp RSQUARE .)
    MINUS           reduce using rule 18 (variable -> ID LSQUARE exp RSQUARE .)
    AND             reduce using rule 18 (variable -> ID LSQUARE exp RSQUARE .)
    OR              reduce using rule 18 (variable -> ID LSQUARE exp RSQUARE .)
    SEMICOLON       reduce using rule 18 (variable -> ID LSQUARE exp RSQUARE .)
    COMMA           reduce using rule 18 (variable -> ID LSQUARE exp RSQUARE .)
    RPAREN          reduce using rule 18 (variable -> ID LSQUARE exp RSQUARE .)
    RSQUARE         reduce using rule 18 (variable -> ID LSQUARE exp RSQUARE .)


state 138

    (47) escribe -> LPAREN mult_cte_s RPAREN SEMICOLON .

    ID              reduce using rule 47 (escribe -> LPAREN mult_cte_s RPAREN SEMICOLON .)
    LEE             reduce using rule 47 (escribe -> LPAREN mult_cte_s RPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 47 (escribe -> LPAREN mult_cte_s RPAREN SEMICOLON .)
    LPAREN          reduce using rule 47 (escribe -> LPAREN mult_cte_s RPAREN SEMICOLON .)
    SI              reduce using rule 47 (escribe -> LPAREN mult_cte_s RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 47 (escribe -> LPAREN mult_cte_s RPAREN SEMICOLON .)
    REGRESA         reduce using rule 47 (escribe -> LPAREN mult_cte_s RPAREN SEMICOLON .)
    DESDE           reduce using rule 47 (escribe -> LPAREN mult_cte_s RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 47 (escribe -> LPAREN mult_cte_s RPAREN SEMICOLON .)


state 139

    (49) mult_cte_s -> CTE_S COMMA mult_cte_s .

    RPAREN          reduce using rule 49 (mult_cte_s -> CTE_S COMMA mult_cte_s .)


state 140

    (45) lee -> LEE LPAREN variable RPAREN .

    ID              reduce using rule 45 (lee -> LEE LPAREN variable RPAREN .)
    LEE             reduce using rule 45 (lee -> LEE LPAREN variable RPAREN .)
    ESCRIBE         reduce using rule 45 (lee -> LEE LPAREN variable RPAREN .)
    LPAREN          reduce using rule 45 (lee -> LEE LPAREN variable RPAREN .)
    SI              reduce using rule 45 (lee -> LEE LPAREN variable RPAREN .)
    MIENTRAS        reduce using rule 45 (lee -> LEE LPAREN variable RPAREN .)
    REGRESA         reduce using rule 45 (lee -> LEE LPAREN variable RPAREN .)
    DESDE           reduce using rule 45 (lee -> LEE LPAREN variable RPAREN .)
    RBRACKET        reduce using rule 45 (lee -> LEE LPAREN variable RPAREN .)


state 141

    (46) escribe -> ESCRIBE LPAREN mult_exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 162


state 142

    (77) condicion -> SI LPAREN exp RPAREN . ENTONCES bloque SINO bloque SEMICOLON
    (78) condicion -> SI LPAREN exp RPAREN . ENTONCES bloque SEMICOLON

    ENTONCES        shift and go to state 163


state 143

    (79) ciclo_w -> MIENTRAS LPAREN exp RPAREN . HAZ bloque

    HAZ             shift and go to state 164


state 144

    (51) exp -> t_exp OR exp .

    SEMICOLON       reduce using rule 51 (exp -> t_exp OR exp .)
    COMMA           reduce using rule 51 (exp -> t_exp OR exp .)
    RPAREN          reduce using rule 51 (exp -> t_exp OR exp .)
    RSQUARE         reduce using rule 51 (exp -> t_exp OR exp .)


state 145

    (53) t_exp -> g_exp AND t_exp .

    OR              reduce using rule 53 (t_exp -> g_exp AND t_exp .)
    SEMICOLON       reduce using rule 53 (t_exp -> g_exp AND t_exp .)
    COMMA           reduce using rule 53 (t_exp -> g_exp AND t_exp .)
    RPAREN          reduce using rule 53 (t_exp -> g_exp AND t_exp .)
    RSQUARE         reduce using rule 53 (t_exp -> g_exp AND t_exp .)


state 146

    (63) m_exp -> t PLUS m_exp .

    AND             reduce using rule 63 (m_exp -> t PLUS m_exp .)
    OR              reduce using rule 63 (m_exp -> t PLUS m_exp .)
    SEMICOLON       reduce using rule 63 (m_exp -> t PLUS m_exp .)
    COMMA           reduce using rule 63 (m_exp -> t PLUS m_exp .)
    RPAREN          reduce using rule 63 (m_exp -> t PLUS m_exp .)
    RSQUARE         reduce using rule 63 (m_exp -> t PLUS m_exp .)


state 147

    (64) m_exp -> t MINUS m_exp .

    AND             reduce using rule 64 (m_exp -> t MINUS m_exp .)
    OR              reduce using rule 64 (m_exp -> t MINUS m_exp .)
    SEMICOLON       reduce using rule 64 (m_exp -> t MINUS m_exp .)
    COMMA           reduce using rule 64 (m_exp -> t MINUS m_exp .)
    RPAREN          reduce using rule 64 (m_exp -> t MINUS m_exp .)
    RSQUARE         reduce using rule 64 (m_exp -> t MINUS m_exp .)


state 148

    (66) t -> f MULT t .

    PLUS            reduce using rule 66 (t -> f MULT t .)
    MINUS           reduce using rule 66 (t -> f MULT t .)
    AND             reduce using rule 66 (t -> f MULT t .)
    OR              reduce using rule 66 (t -> f MULT t .)
    SEMICOLON       reduce using rule 66 (t -> f MULT t .)
    COMMA           reduce using rule 66 (t -> f MULT t .)
    RPAREN          reduce using rule 66 (t -> f MULT t .)
    RSQUARE         reduce using rule 66 (t -> f MULT t .)


state 149

    (67) t -> f DIV t .

    PLUS            reduce using rule 67 (t -> f DIV t .)
    MINUS           reduce using rule 67 (t -> f DIV t .)
    AND             reduce using rule 67 (t -> f DIV t .)
    OR              reduce using rule 67 (t -> f DIV t .)
    SEMICOLON       reduce using rule 67 (t -> f DIV t .)
    COMMA           reduce using rule 67 (t -> f DIV t .)
    RPAREN          reduce using rule 67 (t -> f DIV t .)
    RSQUARE         reduce using rule 67 (t -> f DIV t .)


state 150

    (68) t -> f DETER t .

    PLUS            reduce using rule 68 (t -> f DETER t .)
    MINUS           reduce using rule 68 (t -> f DETER t .)
    AND             reduce using rule 68 (t -> f DETER t .)
    OR              reduce using rule 68 (t -> f DETER t .)
    SEMICOLON       reduce using rule 68 (t -> f DETER t .)
    COMMA           reduce using rule 68 (t -> f DETER t .)
    RPAREN          reduce using rule 68 (t -> f DETER t .)
    RSQUARE         reduce using rule 68 (t -> f DETER t .)


state 151

    (69) t -> f TRANS t .

    PLUS            reduce using rule 69 (t -> f TRANS t .)
    MINUS           reduce using rule 69 (t -> f TRANS t .)
    AND             reduce using rule 69 (t -> f TRANS t .)
    OR              reduce using rule 69 (t -> f TRANS t .)
    SEMICOLON       reduce using rule 69 (t -> f TRANS t .)
    COMMA           reduce using rule 69 (t -> f TRANS t .)
    RPAREN          reduce using rule 69 (t -> f TRANS t .)
    RSQUARE         reduce using rule 69 (t -> f TRANS t .)


state 152

    (70) t -> f INVER t .

    PLUS            reduce using rule 70 (t -> f INVER t .)
    MINUS           reduce using rule 70 (t -> f INVER t .)
    AND             reduce using rule 70 (t -> f INVER t .)
    OR              reduce using rule 70 (t -> f INVER t .)
    SEMICOLON       reduce using rule 70 (t -> f INVER t .)
    COMMA           reduce using rule 70 (t -> f INVER t .)
    RPAREN          reduce using rule 70 (t -> f INVER t .)
    RSQUARE         reduce using rule 70 (t -> f INVER t .)


state 153

    (71) f -> LPAREN exp RPAREN .

    MULT            reduce using rule 71 (f -> LPAREN exp RPAREN .)
    DIV             reduce using rule 71 (f -> LPAREN exp RPAREN .)
    DETER           reduce using rule 71 (f -> LPAREN exp RPAREN .)
    TRANS           reduce using rule 71 (f -> LPAREN exp RPAREN .)
    INVER           reduce using rule 71 (f -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 71 (f -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 71 (f -> LPAREN exp RPAREN .)
    AND             reduce using rule 71 (f -> LPAREN exp RPAREN .)
    OR              reduce using rule 71 (f -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 71 (f -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 71 (f -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 71 (f -> LPAREN exp RPAREN .)
    RSQUARE         reduce using rule 71 (f -> LPAREN exp RPAREN .)


state 154

    (80) ciclo_f -> DESDE asigna HASTA CTE_I . HACER bloque

    HACER           shift and go to state 165


state 155

    (13) vars_aux2 -> ID LSQUARE CTE_I RSQUARE LSQUARE CTE_I RSQUARE .

    SEMICOLON       reduce using rule 13 (vars_aux2 -> ID LSQUARE CTE_I RSQUARE LSQUARE CTE_I RSQUARE .)
    COMMA           reduce using rule 13 (vars_aux2 -> ID LSQUARE CTE_I RSQUARE LSQUARE CTE_I RSQUARE .)


state 156

    (20) funcion -> FUNCION LESSTHAN tipo_simple GREATERTHAN ID LPAREN param RPAREN vars . SEMICOLON bloque

    SEMICOLON       shift and go to state 166


state 157

    (21) funcion -> FUNCION LESSTHAN tipo_simple GREATERTHAN ID LPAREN param RPAREN SEMICOLON . bloque
    (28) bloque -> . LBRACKET mult_estatutos RBRACKET

    LBRACKET        shift and go to state 35

    bloque                         shift and go to state 167

state 158

    (22) funcion -> FUNCION LESSTHAN VOID GREATERTHAN ID LPAREN param RPAREN vars . SEMICOLON bloque

    SEMICOLON       shift and go to state 168


state 159

    (23) funcion -> FUNCION LESSTHAN VOID GREATERTHAN ID LPAREN param RPAREN SEMICOLON . bloque
    (28) bloque -> . LBRACKET mult_estatutos RBRACKET

    LBRACKET        shift and go to state 35

    bloque                         shift and go to state 169

state 160

    (43) mult_exp -> exp COMMA mult_exp .

    RPAREN          reduce using rule 43 (mult_exp -> exp COMMA mult_exp .)


state 161

    (17) variable -> ID LSQUARE exp RSQUARE LSQUARE . exp RSQUARE
    (51) exp -> . t_exp OR exp
    (52) exp -> . t_exp
    (53) t_exp -> . g_exp AND t_exp
    (54) t_exp -> . g_exp
    (55) g_exp -> . m_exp
    (56) g_exp -> . LESSTHAN m_exp
    (57) g_exp -> . LESSEQUAL m_exp
    (58) g_exp -> . GREATERTHAN m_exp
    (59) g_exp -> . GREATEREQUAL m_exp
    (60) g_exp -> . EQUAL m_exp
    (61) g_exp -> . NOEQUAL m_exp
    (62) m_exp -> . t
    (63) m_exp -> . t PLUS m_exp
    (64) m_exp -> . t MINUS m_exp
    (65) t -> . f
    (66) t -> . f MULT t
    (67) t -> . f DIV t
    (68) t -> . f DETER t
    (69) t -> . f TRANS t
    (70) t -> . f INVER t
    (71) f -> . LPAREN exp RPAREN
    (72) f -> . CTE_I
    (73) f -> . CTE_F
    (74) f -> . CTE_C
    (75) f -> . variable
    (76) f -> . llamada
    (17) variable -> . ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE
    (18) variable -> . ID LSQUARE exp RSQUARE
    (19) variable -> . ID
    (41) llamada -> . ID LPAREN mult_exp RPAREN

    LESSTHAN        shift and go to state 79
    LESSEQUAL       shift and go to state 80
    GREATERTHAN     shift and go to state 81
    GREATEREQUAL    shift and go to state 82
    EQUAL           shift and go to state 83
    NOEQUAL         shift and go to state 84
    LPAREN          shift and go to state 87
    CTE_I           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_C           shift and go to state 90
    ID              shift and go to state 93

    exp                            shift and go to state 170
    t_exp                          shift and go to state 76
    g_exp                          shift and go to state 77
    m_exp                          shift and go to state 78
    t                              shift and go to state 85
    f                              shift and go to state 86
    variable                       shift and go to state 91
    llamada                        shift and go to state 92

state 162

    (46) escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON .

    ID              reduce using rule 46 (escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON .)
    LEE             reduce using rule 46 (escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 46 (escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON .)
    LPAREN          reduce using rule 46 (escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON .)
    SI              reduce using rule 46 (escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 46 (escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON .)
    REGRESA         reduce using rule 46 (escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON .)
    DESDE           reduce using rule 46 (escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 46 (escribe -> ESCRIBE LPAREN mult_exp RPAREN SEMICOLON .)


state 163

    (77) condicion -> SI LPAREN exp RPAREN ENTONCES . bloque SINO bloque SEMICOLON
    (78) condicion -> SI LPAREN exp RPAREN ENTONCES . bloque SEMICOLON
    (28) bloque -> . LBRACKET mult_estatutos RBRACKET

    LBRACKET        shift and go to state 35

    bloque                         shift and go to state 171

state 164

    (79) ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ . bloque
    (28) bloque -> . LBRACKET mult_estatutos RBRACKET

    LBRACKET        shift and go to state 35

    bloque                         shift and go to state 172

state 165

    (80) ciclo_f -> DESDE asigna HASTA CTE_I HACER . bloque
    (28) bloque -> . LBRACKET mult_estatutos RBRACKET

    LBRACKET        shift and go to state 35

    bloque                         shift and go to state 173

state 166

    (20) funcion -> FUNCION LESSTHAN tipo_simple GREATERTHAN ID LPAREN param RPAREN vars SEMICOLON . bloque
    (28) bloque -> . LBRACKET mult_estatutos RBRACKET

    LBRACKET        shift and go to state 35

    bloque                         shift and go to state 174

state 167

    (21) funcion -> FUNCION LESSTHAN tipo_simple GREATERTHAN ID LPAREN param RPAREN SEMICOLON bloque .

    PRINCIPAL       reduce using rule 21 (funcion -> FUNCION LESSTHAN tipo_simple GREATERTHAN ID LPAREN param RPAREN SEMICOLON bloque .)


state 168

    (22) funcion -> FUNCION LESSTHAN VOID GREATERTHAN ID LPAREN param RPAREN vars SEMICOLON . bloque
    (28) bloque -> . LBRACKET mult_estatutos RBRACKET

    LBRACKET        shift and go to state 35

    bloque                         shift and go to state 175

state 169

    (23) funcion -> FUNCION LESSTHAN VOID GREATERTHAN ID LPAREN param RPAREN SEMICOLON bloque .

    PRINCIPAL       reduce using rule 23 (funcion -> FUNCION LESSTHAN VOID GREATERTHAN ID LPAREN param RPAREN SEMICOLON bloque .)


state 170

    (17) variable -> ID LSQUARE exp RSQUARE LSQUARE exp . RSQUARE

    RSQUARE         shift and go to state 176


state 171

    (77) condicion -> SI LPAREN exp RPAREN ENTONCES bloque . SINO bloque SEMICOLON
    (78) condicion -> SI LPAREN exp RPAREN ENTONCES bloque . SEMICOLON

    SINO            shift and go to state 177
    SEMICOLON       shift and go to state 178


state 172

    (79) ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque .

    ID              reduce using rule 79 (ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque .)
    LEE             reduce using rule 79 (ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque .)
    ESCRIBE         reduce using rule 79 (ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque .)
    LPAREN          reduce using rule 79 (ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque .)
    SI              reduce using rule 79 (ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque .)
    MIENTRAS        reduce using rule 79 (ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque .)
    REGRESA         reduce using rule 79 (ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque .)
    DESDE           reduce using rule 79 (ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque .)
    RBRACKET        reduce using rule 79 (ciclo_w -> MIENTRAS LPAREN exp RPAREN HAZ bloque .)


state 173

    (80) ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque .

    ID              reduce using rule 80 (ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque .)
    LEE             reduce using rule 80 (ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque .)
    ESCRIBE         reduce using rule 80 (ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque .)
    LPAREN          reduce using rule 80 (ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque .)
    SI              reduce using rule 80 (ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque .)
    MIENTRAS        reduce using rule 80 (ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque .)
    REGRESA         reduce using rule 80 (ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque .)
    DESDE           reduce using rule 80 (ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque .)
    RBRACKET        reduce using rule 80 (ciclo_f -> DESDE asigna HASTA CTE_I HACER bloque .)


state 174

    (20) funcion -> FUNCION LESSTHAN tipo_simple GREATERTHAN ID LPAREN param RPAREN vars SEMICOLON bloque .

    PRINCIPAL       reduce using rule 20 (funcion -> FUNCION LESSTHAN tipo_simple GREATERTHAN ID LPAREN param RPAREN vars SEMICOLON bloque .)


state 175

    (22) funcion -> FUNCION LESSTHAN VOID GREATERTHAN ID LPAREN param RPAREN vars SEMICOLON bloque .

    PRINCIPAL       reduce using rule 22 (funcion -> FUNCION LESSTHAN VOID GREATERTHAN ID LPAREN param RPAREN vars SEMICOLON bloque .)


state 176

    (17) variable -> ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE .

    EQUAL           reduce using rule 17 (variable -> ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE .)
    MULT            reduce using rule 17 (variable -> ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE .)
    DIV             reduce using rule 17 (variable -> ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE .)
    DETER           reduce using rule 17 (variable -> ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE .)
    TRANS           reduce using rule 17 (variable -> ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE .)
    INVER           reduce using rule 17 (variable -> ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE .)
    PLUS            reduce using rule 17 (variable -> ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE .)
    MINUS           reduce using rule 17 (variable -> ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE .)
    AND             reduce using rule 17 (variable -> ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE .)
    OR              reduce using rule 17 (variable -> ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE .)
    SEMICOLON       reduce using rule 17 (variable -> ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE .)
    COMMA           reduce using rule 17 (variable -> ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE .)
    RPAREN          reduce using rule 17 (variable -> ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE .)
    RSQUARE         reduce using rule 17 (variable -> ID LSQUARE exp RSQUARE LSQUARE exp RSQUARE .)


state 177

    (77) condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO . bloque SEMICOLON
    (28) bloque -> . LBRACKET mult_estatutos RBRACKET

    LBRACKET        shift and go to state 35

    bloque                         shift and go to state 179

state 178

    (78) condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON .

    ID              reduce using rule 78 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON .)
    LEE             reduce using rule 78 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON .)
    ESCRIBE         reduce using rule 78 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON .)
    LPAREN          reduce using rule 78 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON .)
    SI              reduce using rule 78 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON .)
    MIENTRAS        reduce using rule 78 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON .)
    REGRESA         reduce using rule 78 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON .)
    DESDE           reduce using rule 78 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON .)
    RBRACKET        reduce using rule 78 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SEMICOLON .)


state 179

    (77) condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque . SEMICOLON

    SEMICOLON       shift and go to state 180


state 180

    (77) condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON .

    ID              reduce using rule 77 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON .)
    LEE             reduce using rule 77 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON .)
    ESCRIBE         reduce using rule 77 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON .)
    LPAREN          reduce using rule 77 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON .)
    SI              reduce using rule 77 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON .)
    MIENTRAS        reduce using rule 77 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON .)
    REGRESA         reduce using rule 77 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON .)
    DESDE           reduce using rule 77 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON .)
    RBRACKET        reduce using rule 77 (condicion -> SI LPAREN exp RPAREN ENTONCES bloque SINO bloque SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 41 resolved using rule (empty -> <empty>)
WARNING: rejected rule (mult_estatutos -> estatuto) in state 41
WARNING: reduce/reduce conflict in state 97 resolved using rule (param -> ID)
WARNING: rejected rule (empty -> <empty>) in state 97
WARNING: Rule (mult_estatutos -> estatuto) is never reduced
